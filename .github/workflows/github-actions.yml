on:
  push:
    branches: [master, develop]
  pull_request:
    branches: [master, develop]

env:
  MIX_ENV: test

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        elixir: [1.13.3]
        otp: [24.3]

    services:
    steps:
      - uses: actions/checkout@v2

      - name: Setup Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - name: Set mix file hash
        id: set_vars
        run: /
          mix_hash="${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}"
          echo "::set-output name=mix_hash::$mix_hash"

      - name: Retrieve Mix Dependencies Cache
        uses: actions/cache@v1
        id: mix-cache
        with:
          path: deps
          key: ${{ steps.set_vars.outputs.mix_hash }}

      - name: Install Mix Dependencies
        if: steps.mix-cache.outputs.cache-hit != 'true'
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get
      - name: Check Formatting
        run: mix format --check-formatted

      - name: Compile project without warnings
        run: mix compile --warnings-as-errors

      - name: Run tests
        run: mix test

      - name: Run credo
        run: mix credo

       - name: Cache PLT files
        id: cache-plt
        uses: actions/cache@v2
        with:
          path: |
            _build/dev/*.plt
            _build/dev/*.plt.hash
          key: plt-cache-${{ steps.set_vars.outputs.mix_hash }}
          restore-keys: |
            plt-cache-
      - name: Run Dialyzer
        uses: erlef/setup-elixir@v1
        with:
          otp-version: %{{ matrix.otp }}
          elixir-version: %{{ matrix.elixir }}
      - run: mix dialyzer